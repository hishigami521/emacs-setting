;;(add-to-list 'load-path "~/.emacs.d/elisp")

(add-to-list 'load-path "~/.emacs.d/color-theme-6.6.0")
(when (require `color-theme)
  (color-theme-initialize)
  (color-theme-taylor))

(add-to-list 'load-path "~/.emacs.d/")
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "/Users/hishigami/.emacs.d//ac-dict")
(ac-config-default)

(set-language-environment "Japanese")
(set-default-coding-systems 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
(set-buffer-file-coding-system 'utf-8)

;;; global key-bind
(global-set-key "\C-h" 'delete-backward-char) ;
(global-set-key "\M-g" 'goto-line) ;
(define-key global-map "\C-cc" 'comment-region) ; comment-region
;; (global-set-key "\C-x\C-f" 'anything-my-find-files)

;; ;;; setting for backup and save file
;; (setq make-backup-files nil)
;; (setq auto-save-default nil)
;; (setq delete-auto-save-files t)

;; ;; set truncation
;; (setq truncate-lines nil)
;; (setq truncate-partial-width-windows nil)

;; ;;; setting for font-lock
;; (global-font-lock-mode t)

;; (menu-bar-mode -1)

;; ;;; setting for paren
;; (show-paren-mode 1);
;; (setq show-paren-style 'mixed);

;; (defun swap-screen()
;;   "Swap two screen,leaving cursor at current window."
;;   (interactive)
;;   (let ((thiswin (selected-window))
;;         (nextbuf (window-buffer (next-window))))
;;     (set-window-buffer (next-window) (window-buffer))
;;     (set-window-buffer thiswin nextbuf)))
;; (defun swap-screen-with-cursor()
;;   "Swap two screen,with cursor in same buffer."
;;   (interactive)
;;   (let ((thiswin (selected-window))
;;         (thisbuf (window-buffer)))
;;     (other-window 1)
;;     (set-window-buffer thiswin (window-buffer))
;;     (set-window-buffer (selected-window) thisbuf)))
;; (global-set-key [f2] 'swap-screen)
;; (global-set-key [S-f2] 'swap-screen-with-cursor)

;; ;; tex-mode hook
;; (add-hook 'latex-mode-hook
;; 	  (lambda ()
;; 	    (flyspell-mode)
;;             (ac-flyspell-workaround)
;;             (ac-l-setup)
;; 	    (turn-on-reftex)
;;             (define-key latex-mode-map "\C-c\C-c" 'comment-region)
;;             (define-key latex-mode-map "\C-c\C-f" 'my-latex-file)
;;             (define-key latex-mode-map "\C-c\C-i" 'my-tex-bibtex-file)
;;             (define-key latex-mode-map "\C-c\C-v" 'tex-view-pdf)
;; 	    (define-key latex-mode-map "\C-cx" 'reftex-reset-mode)))

